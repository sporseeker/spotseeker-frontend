"use client";
import { useState } from "react";
import Image from "next/image";
import { useRouter } from "next/navigation";
import { LoginForm } from "@/components/auth/LoginForm";
import { RegisterForm } from "@/components/auth/RegisterForm";
import { OtpForm } from "@/components/auth/OtpForm";
import { useToast } from "@/contexts/ToastContext";
import { ContentAreaLayout } from "@/components/content-area-layout";

type AuthMode = "login" | "register" | "otp";

const AuthPage = () => {
  const [mode, setMode] = useState<AuthMode>("login");
  const [mobileNumber, setMobileNumber] = useState<string>("");
  const router = useRouter();
  const { showToast } = useToast();

  const handleModeChange = (newMode: AuthMode) => {
    setMode(newMode);
  };

  const handleLoginSuccess = () => {
    showToast(
      "Welcome Aboard!",
      "Let's connect you to the events of your dreams.",
    );
  };

  const handleRegisterSuccess = (mobile: string) => {
    setMobileNumber(mobile);
    setMode("otp");
  };

  const handleOtpSuccess = () => {
    showToast(
      "Welcome Aboard!",
      "Let's connect you to the events of your dreams.",
    );
    router.push("/");
  };

  return (
    <section className="relative min-h-screen pt-[120px]">
      <Image
        src="/images/auth/auth-banner.png"
        alt="Auth Background"
        layout="fill"
        objectFit="cover"
        quality={100}
        priority
      />
      <ContentAreaLayout className="flex justify-center">
        <div className="my-[16px] mb-[30px] flex h-full w-full max-w-[420px]">
          <div className="z-10 w-full flex-grow-0 flex-col items-start justify-start rounded-xl border border-neutral-800 bg-[#181818]/90 px-[20px] py-[28px] shadow-lg lg:p-[40px]">
            {mode === "login" && (
              <LoginForm
                onSuccess={handleLoginSuccess}
                onRegisterClick={() => handleModeChange("register")}
              />
            )}
            {mode === "register" && (
              <RegisterForm
                onSuccess={handleRegisterSuccess}
                onLoginClick={() => handleModeChange("login")}
              />
            )}
            {mode === "otp" && (
              <OtpForm
                onSuccess={handleOtpSuccess}
                mobileNumber={mobileNumber}
              />
            )}
          </div>
        </div>
      </ContentAreaLayout>
    </section>
  );
};

export default AuthPage;
